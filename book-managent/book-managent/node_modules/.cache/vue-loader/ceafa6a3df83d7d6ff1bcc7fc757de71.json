{"remainingRequest":"D:\\Django\\book-managent\\book-managent\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Django\\book-managent\\book-managent\\src\\views\\admin\\readers.vue?vue&type=style&index=0&id=1a6021a6&scoped=true&lang=css&","dependencies":[{"path":"D:\\Django\\book-managent\\book-managent\\src\\views\\admin\\readers.vue","mtime":1625129814618},{"path":"D:\\Django\\book-managent\\book-managent\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Django\\book-managent\\book-managent\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Django\\book-managent\\book-managent\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Django\\book-managent\\book-managent\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Django\\book-managent\\book-managent\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWwtdGFibGUgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoNCiNhZGRVc2VyIHsNCiAgZmxvYXQ6IHJpZ2h0Ow0KICBtYXJnaW4tcmlnaHQ6IDYwcHg7DQogIG1hcmdpbi10b3A6IDIwcHg7DQp9DQo="},{"version":3,"sources":["readers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4NA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"readers.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n  <div>\r\n    <el-table\r\n        border\r\n        :data=\"tableData\"\r\n        style=\"width: 80%; margin-left: 220px;margin-top: 50px\">\r\n      <el-table-column\r\n          label=\"注册时间\"\r\n          align=\"center\"\r\n          prop=\"date\">\r\n      </el-table-column>\r\n      <el-table-column\r\n          label=\"用户名\"\r\n          align=\"center\"\r\n          prop=\"username\">\r\n      </el-table-column>\r\n      <el-table-column\r\n          label=\"邮箱\"\r\n          align=\"center\"\r\n          prop=\"email\">\r\n      </el-table-column>\r\n      <el-table-column\r\n          label=\"操作\"\r\n          align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" circle\r\n                     @click=\"handleEdit(scope.$index)\"></el-button>\r\n          &nbsp;&nbsp;\r\n          <el-button slot=\"reference\" size=\"mini\"\r\n                     @click=\"handleDelete(scope.$index)\" type=\"danger\" icon=\"el-icon-delete\" circle>\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div id=\"addUser\">\r\n      <el-button type=\"primary\" @click=\"dialogFormAddUser = true\">新增用户</el-button>\r\n    </div>\r\n    <div>\r\n      <el-dialog title=\"用户修改\" :visible.sync=\"dialogFormEditUser\">\r\n        <el-form :model=\"form\">\r\n          <el-form-item label=\"用户名\" label-width=\"100px\">\r\n            <el-input v-model=\"form.username\" :value=\"form.username\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\" label-width=\"100px\">\r\n            <el-input type=\"email\" v-model=\"form.email\" :value=\"form.email\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogFormEditUser = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"commit\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n      <el-dialog title=\"新增用户\" :visible.sync=\"dialogFormAddUser\">\r\n        <el-form :model=\"addForm\" status-icon :rules=\"rules\">\r\n          <el-form-item label=\"用户名\" label-width=\"100px\" prop=\"username\">\r\n            <el-input v-model=\"addForm.username\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"email\"\r\n                        label-width=\"100px\"\r\n                        label=\"邮箱\"\r\n                        :rules=\"[\r\n                      { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n                      { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n                    ]\"\r\n          >\r\n            <el-input type=\"email\" v-model=\"addForm.email\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" label-width=\"100px\" prop=\"password\">\r\n            <el-input type=\"password\" v-model=\"addForm.password\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码\" label-width=\"100px\" prop=\"password2\">\r\n            <el-input type=\"password\" v-model=\"addForm.password2\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogFormAddUser = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"commit\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {DeleteUser, EditUser, GetUser, Register} from \"@/api/requests\";\r\n\r\nexport default {\r\n  name: \"readers\",\r\n  data() {\r\n    var checkName = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error('用户名不能为空'));\r\n      }\r\n    };\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.addForm.password) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      dialogFormEditUser: false,\r\n      dialogFormAddUser: false,\r\n      tableData: [],\r\n      index: '',\r\n      form: {\r\n        email: '',\r\n        username: '',\r\n      },\r\n      addForm: {\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n        password2: '',\r\n      },\r\n      rules: {\r\n        password: [\r\n          {validator: validatePass, trigger: 'blur', required: true}\r\n        ],\r\n        password2: [\r\n          {validator: validatePass2, trigger: 'blur', required: true}\r\n        ],\r\n        username: [\r\n          {validator: checkName, trigger: 'blur', required: true}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load() {\r\n      GetUser().then((res) => {\r\n        this.tableData = res.data\r\n      })\r\n    },\r\n    handleEdit: function (index) {\r\n      this.index = index;\r\n      this.dialogFormEditUser = true\r\n      this.form.username = this.tableData[index].username\r\n      this.form.email = this.tableData[index].email\r\n    },\r\n    handleDelete(index) {\r\n      this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        DeleteUser(this.tableData[index].id).then((res) => {\r\n          if (res.status == 200) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: res.message\r\n            })\r\n            this.tableData.splice(index, 1);\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    commit() {\r\n      if (this.dialogFormEditUser === true) {\r\n        EditUser(this.form, this.tableData[this.index].id).then((res) => {\r\n          if (res.status == 200) {\r\n            this.dialogFormEditUser = false;\r\n            this.dialogFormAddUser = false;\r\n            this.$message({\r\n              type: 'success',\r\n              message: res.message\r\n            })\r\n            this.tableData[this.index].username = this.form.username;\r\n            this.tableData[this.index].email = this.form.email\r\n            this.index = '';\r\n          } else {\r\n            this.$message({\r\n              type: 'error',\r\n              message: res.message\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        Register(this.addForm).then((res) => {\r\n          if (res.status == 200) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '添加成功!'\r\n            })\r\n            this.dialogFormAddUser = false;\r\n            this.dialogFormEditUser = false;\r\n            this.load()\r\n          } else {\r\n            this.$message({\r\n              type: 'error',\r\n              message: res.message\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-table {\r\n  text-align: center;\r\n}\r\n\r\n#addUser {\r\n  float: right;\r\n  margin-right: 60px;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"]}]}